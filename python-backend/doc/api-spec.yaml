openapi: 3.0.0
servers: []
info:
  description: This is a simple API for the Morning Breifing project's Django REST API
  version: "1.0.0"
  title: Morning Briefing API
tags:
  - name: login
    description: User authentication
  - name: data
    description: Operations to fetch data used to create reports and populate Dashboards
  - name: reports
    description: Operations to create reports and run them
paths:
  /login:
    post:
      tags:
        - login
      summary: authenticates user
      operationId: login
      description: |
        Handles user auth
      parameters:
        - in: header
          name: username
          description: User's unique username
          required: true
          schema:
            type: string
        - in: header
          name: password
          description: User's password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user authenticated
        '401':
          description: incorrect username or password
  /data/weather:
    post:
      tags:
        - data
      summary: weather forecast data for a given postcode
      operationId: getWeatherByPostcode
      description: |
        Retrieves weather forecast data for a given postcode
      parameters:
        - in: query
          name: postcode
          description: UK Postcode
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherItem'
        '400':
          description: Bad Request
  /data/stocks:
    post:
      tags:
        - data
      summary: daily price data for a given stock symbol
      operationId: getPriceByStockSymbol
      description: |
        Retrieves the last 100 days of price data for a stock symbol
      parameters:
        - in: query
          name: symbol
          description: Stock Symbol for US Company
          required: true
          schema:
            type: string
            example: AAPL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockItem'
        '400':
          description: Bad Request
  /reports/list:
    get:
      tags:
        - reports
      summary: retrieves a list of every report
      operationId: listReports
      description: |
        Retrieves every report stored in the DB
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportItem'
        '400':
          description: error
  /reports/report/create:
    post:
      tags:
        - reports
      summary: creates a new report
      operationId: createReport
      description: |
        Creates a new report
      parameters:
        - in: header
          name: reportName
          description: name of report
          required: true
          schema:
            type: string
        - in: header
          name: exampleNumber
          description: example number
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '201':
          description: successfully created report
        '400':
          description: error while creating report
  /reports/report/update:
    post:
      tags:
        - reports
      summary: updates an existing report
      operationId: updateReport
      description: |
        Updates an existing report
      parameters:
        - in: header
          name: reportId
          description: UUID of report
          required: true
          schema:
            type: string
        - in: header
          name: exampleNumber
          description: example number
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '201':
          description: successfully created report
        '400':
          description: error while creating report
  /reports/report/search:
    post:
      tags:
        - reports
      summary: retrieves a report
      operationId: getReportByUUID
      description: |
        Retrieves information about a report via UUID
      parameters:
        - in: header
          name: reportId
          description: UUID of report
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportItem'
        '400':
          description: error
  /reports/report/delete:
    post:
      tags:
        - reports
      summary: deletes a report
      operationId: deleteReportByUUID
      description: |
        Deletes a report with specified UUID
      parameters:
        - in: header
          name: reportId
          description: UUID of report
          required: true
          schema:
            type: string
      responses:
        '201':
          description: sucessfully deleted
        '400':
          description: error
  /reports/report/build:
    post:
      tags:
        - reports
      summary: Renders a report
      operationId: renderReportByUUID
      description: |
        Renders a report with specified UUID
      parameters:
        - in: header
          name: reportId
          description: UUID of report
          required: true
          schema:
            type: string
      responses:
        '201':
          description: INSERT PDF HERE
        '400':
          description: error
components:
  schemas:
    ReportItem:
      type: object
      required:
        - id
        - name
        - WeatherItem
        - StockList
        - RunTime
        - createdDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        createdDate:
          type: string
          format: date-time
          example: '2020-08-29T09:12:33.001Z'
        WeatherItem:
          $ref: '#/components/schemas/WeatherItem'
        StockItem:
          $ref: '#/components/schemas/StockItem'
    WeatherItem:
      required:
        - datetime
        - temperature
        - feels_like
        - humidity
        - wind_speed
        - weather
      properties:
        datetime:
          type: integer
          format: int64
          example: 1586487424
        temperature:
          type: number
          format: float
          example: 27.35
        feels_like:
          type: number
          format: float
          example: 24.21
        humidity:
          type: number
          format: float
          example: 65
        wind_speed:
          type: integer
          format: int32
          example: 65
        weather:
          type: object
          properties:
            id:
              type: integer
              format: int32
              example: 800
            main:
              type: string
              example: "Clear"
            description:
              type: string
              example: "clear sky"
      type: object
    StockItem:
      required:
        - date
        - openingPrice
      properties:
        date:
          type: string
          format: date
          example: "2021-02-26"
        openingPrice:
          type: number
          format: float
          example: 126.67
      type: object